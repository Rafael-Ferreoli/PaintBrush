/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package view;

import java.awt.Color;
import java.awt.Graphics;
import java.util.Random;
import javax.swing.JColorChooser;
import model.Borracha;
import model.Cilindro;
import model.Circulo;
import model.D2;
import model.Poligono;
import model.Ponto;
import model.Reta;
import model.Retangulo;
import model.Piramide;

/**
 *
 * @author rafael
 */
public class FrMain extends javax.swing.JFrame {

    public int opcaoSelecionada = 0; //1-PONTO || 2-RETA || 3-CIRCULO|| 4-RETANGULO || 5 - BORRACHA || 6 - SPRAY || 7 - CILINDRO || 8 - POLIGONO || 9 - PIRAMIDE
    private int raio = 16; // Raio da área de dispersão do spray
    private int lastClickX = -1;
    private int lastClickY = -1;
    private int tamanho;

    Retangulo retangulo = new Retangulo();
    Circulo circulo = new Circulo();
    Reta reta = new Reta();
    Borracha borracha = new Borracha();
    Ponto ponto = new Ponto();
    Cilindro cilindro = new Cilindro();
    Poligono poligono = new Poligono();
    Piramide piramide = new Piramide();

    /**
     * Creates new form FrMain
     */
    public FrMain() {
        initComponents();
        Color amarelo = new Color(255, 255, 224);
        jFrameDesenho.setBackground(amarelo);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFrameDesenho = new javax.swing.JPanel();
        btnPonto = new javax.swing.JButton();
        btnReta = new javax.swing.JButton();
        jCorPrincipal = new javax.swing.JPanel();
        jCorSecundaria = new javax.swing.JPanel();
        btnCirculo = new javax.swing.JButton();
        btnRetangulo = new javax.swing.JButton();
        btnBorracha = new javax.swing.JButton();
        btnSpray = new javax.swing.JButton();
        btnCilindro = new javax.swing.JButton();
        btnPoligono = new javax.swing.JButton();
        btnTriangulo = new javax.swing.JButton();
        btnBalde = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        cbTexto = new java.awt.Checkbox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jFrameDesenho.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jFrameDesenho.setMaximumSize(null);
        jFrameDesenho.setPreferredSize(new java.awt.Dimension(440, 764));
        jFrameDesenho.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                jFrameDesenhoMouseDragged(evt);
            }
        });
        jFrameDesenho.addMouseWheelListener(new java.awt.event.MouseWheelListener() {
            public void mouseWheelMoved(java.awt.event.MouseWheelEvent evt) {
                jFrameDesenhoMouseWheelMoved(evt);
            }
        });
        jFrameDesenho.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jFrameDesenhoMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jFrameDesenhoMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jFrameDesenhoMouseReleased(evt);
            }
        });

        javax.swing.GroupLayout jFrameDesenhoLayout = new javax.swing.GroupLayout(jFrameDesenho);
        jFrameDesenho.setLayout(jFrameDesenhoLayout);
        jFrameDesenhoLayout.setHorizontalGroup(
            jFrameDesenhoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jFrameDesenhoLayout.setVerticalGroup(
            jFrameDesenhoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 438, Short.MAX_VALUE)
        );

        btnPonto.setBackground(new java.awt.Color(153, 153, 153));
        btnPonto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/icons8-ponto-32.png"))); // NOI18N
        btnPonto.setToolTipText("Ponto");
        btnPonto.setMaximumSize(new java.awt.Dimension(50, 40));
        btnPonto.setMinimumSize(new java.awt.Dimension(50, 40));
        btnPonto.setPreferredSize(new java.awt.Dimension(50, 40));
        btnPonto.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnPontoMouseClicked(evt);
            }
        });

        btnReta.setBackground(new java.awt.Color(153, 153, 153));
        btnReta.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/icons8-linha-32.png"))); // NOI18N
        btnReta.setToolTipText("Reta");
        btnReta.setMaximumSize(new java.awt.Dimension(50, 40));
        btnReta.setMinimumSize(new java.awt.Dimension(50, 40));
        btnReta.setPreferredSize(new java.awt.Dimension(50, 40));
        btnReta.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnRetaMouseClicked(evt);
            }
        });

        jCorPrincipal.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jCorPrincipal.setPreferredSize(new java.awt.Dimension(50, 30));
        jCorPrincipal.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jCorPrincipalMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jCorPrincipalLayout = new javax.swing.GroupLayout(jCorPrincipal);
        jCorPrincipal.setLayout(jCorPrincipalLayout);
        jCorPrincipalLayout.setHorizontalGroup(
            jCorPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 46, Short.MAX_VALUE)
        );
        jCorPrincipalLayout.setVerticalGroup(
            jCorPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 26, Short.MAX_VALUE)
        );

        jCorSecundaria.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jCorSecundaria.setPreferredSize(new java.awt.Dimension(50, 40));
        jCorSecundaria.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jCorSecundariaMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jCorSecundariaLayout = new javax.swing.GroupLayout(jCorSecundaria);
        jCorSecundaria.setLayout(jCorSecundariaLayout);
        jCorSecundariaLayout.setHorizontalGroup(
            jCorSecundariaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 46, Short.MAX_VALUE)
        );
        jCorSecundariaLayout.setVerticalGroup(
            jCorSecundariaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 26, Short.MAX_VALUE)
        );

        btnCirculo.setBackground(new java.awt.Color(153, 153, 153));
        btnCirculo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/icons8-círculo-32.png"))); // NOI18N
        btnCirculo.setToolTipText("Círculo");
        btnCirculo.setMaximumSize(new java.awt.Dimension(50, 40));
        btnCirculo.setMinimumSize(new java.awt.Dimension(50, 40));
        btnCirculo.setPreferredSize(new java.awt.Dimension(50, 40));
        btnCirculo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnCirculoMouseClicked(evt);
            }
        });

        btnRetangulo.setBackground(new java.awt.Color(153, 153, 153));
        btnRetangulo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/icons8-retângulo-32.png"))); // NOI18N
        btnRetangulo.setToolTipText("Quadrado");
        btnRetangulo.setMaximumSize(new java.awt.Dimension(50, 40));
        btnRetangulo.setMinimumSize(new java.awt.Dimension(50, 40));
        btnRetangulo.setPreferredSize(new java.awt.Dimension(50, 40));
        btnRetangulo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnRetanguloMouseClicked(evt);
            }
        });

        btnBorracha.setBackground(new java.awt.Color(153, 153, 153));
        btnBorracha.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/icons8-borracha-32.png"))); // NOI18N
        btnBorracha.setToolTipText("Borracha");
        btnBorracha.setMaximumSize(new java.awt.Dimension(50, 40));
        btnBorracha.setMinimumSize(new java.awt.Dimension(50, 40));
        btnBorracha.setPreferredSize(new java.awt.Dimension(50, 40));
        btnBorracha.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnBorrachaMouseClicked(evt);
            }
        });

        btnSpray.setBackground(new java.awt.Color(153, 153, 153));
        btnSpray.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/icons8-desodorante-spray-32.png"))); // NOI18N
        btnSpray.setToolTipText("Spray");
        btnSpray.setMaximumSize(new java.awt.Dimension(50, 40));
        btnSpray.setMinimumSize(new java.awt.Dimension(50, 40));
        btnSpray.setPreferredSize(new java.awt.Dimension(50, 40));
        btnSpray.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnSprayMouseClicked(evt);
            }
        });

        btnCilindro.setBackground(new java.awt.Color(153, 153, 153));
        btnCilindro.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons8-three-dimensional-cylindrical-model-rotating-in-anticlockwise-rotation-32.png"))); // NOI18N
        btnCilindro.setToolTipText("Cilindro");
        btnCilindro.setMaximumSize(new java.awt.Dimension(50, 40));
        btnCilindro.setMinimumSize(new java.awt.Dimension(50, 40));
        btnCilindro.setPreferredSize(new java.awt.Dimension(50, 40));
        btnCilindro.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnCilindroMouseClicked(evt);
            }
        });

        btnPoligono.setBackground(new java.awt.Color(153, 153, 153));
        btnPoligono.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/icons8-polígono-32.png"))); // NOI18N
        btnPoligono.setToolTipText("Polígono");
        btnPoligono.setMaximumSize(new java.awt.Dimension(50, 40));
        btnPoligono.setMinimumSize(new java.awt.Dimension(50, 40));
        btnPoligono.setPreferredSize(new java.awt.Dimension(50, 40));
        btnPoligono.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnPoligonoMouseClicked(evt);
            }
        });

        btnTriangulo.setBackground(new java.awt.Color(153, 153, 153));
        btnTriangulo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/icons8-geometria-32.png"))); // NOI18N
        btnTriangulo.setToolTipText("Pirâmide");
        btnTriangulo.setMaximumSize(new java.awt.Dimension(50, 40));
        btnTriangulo.setMinimumSize(new java.awt.Dimension(50, 40));
        btnTriangulo.setPreferredSize(new java.awt.Dimension(50, 40));
        btnTriangulo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnTrianguloMouseClicked(evt);
            }
        });

        btnBalde.setBackground(new java.awt.Color(153, 153, 153));
        btnBalde.setForeground(new java.awt.Color(0, 0, 0));
        btnBalde.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/icons8-balde-de-tinta-32.png"))); // NOI18N
        btnBalde.setToolTipText("Balde de Tinta");
        btnBalde.setMaximumSize(new java.awt.Dimension(50, 40));
        btnBalde.setMinimumSize(new java.awt.Dimension(50, 40));
        btnBalde.setPreferredSize(new java.awt.Dimension(50, 40));
        btnBalde.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBaldeActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("COR 1");
        jLabel1.setMaximumSize(new java.awt.Dimension(50, 10));
        jLabel1.setMinimumSize(new java.awt.Dimension(50, 10));
        jLabel1.setPreferredSize(new java.awt.Dimension(50, 10));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("COR 2");
        jLabel2.setMaximumSize(new java.awt.Dimension(50, 10));
        jLabel2.setMinimumSize(new java.awt.Dimension(50, 10));
        jLabel2.setPreferredSize(new java.awt.Dimension(50, 10));

        cbTexto.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        cbTexto.setLabel("MEDIDAS");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jFrameDesenho, javax.swing.GroupLayout.DEFAULT_SIZE, 761, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnBalde, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(5, 5, 5)
                        .addComponent(btnPonto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnReta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnCirculo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnRetangulo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnBorracha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSpray, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnCilindro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnPoligono, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnTriangulo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jCorPrincipal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jCorSecundaria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cbTexto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnReta, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnCirculo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnRetangulo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnSpray, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnCilindro, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnPoligono, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnTriangulo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnPonto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnBalde, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jCorSecundaria, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jCorPrincipal, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cbTexto, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 10, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(btnBorracha, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jFrameDesenho, javax.swing.GroupLayout.DEFAULT_SIZE, 440, Short.MAX_VALUE)
                .addContainerGap())
        );

        setBounds(0, 0, 792, 520);
    }// </editor-fold>//GEN-END:initComponents

    private void btnPontoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnPontoMouseClicked
        opcaoSelecionada = 1;
        setTitle("PONTO SELECIONADO");
    }//GEN-LAST:event_btnPontoMouseClicked

    private void jCorPrincipalMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jCorPrincipalMouseClicked
        // Crie um JColorChooser
        JColorChooser colorChooser = new JColorChooser(jCorPrincipal.getBackground());

        // Abra o diálogo de seleção de cores
        Color selectedColor = colorChooser.showDialog(this, "Selecione uma cor", jCorPrincipal.getBackground());

        // Verifique se o usuário selecionou uma cor
        if (selectedColor != null) {
            // Defina a cor de fundo do jCorPrincipal com a cor selecionada
            jCorPrincipal.setBackground(selectedColor);
        }
    }//GEN-LAST:event_jCorPrincipalMouseClicked

    private void jCorSecundariaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jCorSecundariaMouseClicked
        // Crie um JColorChooser
        JColorChooser colorChooser = new JColorChooser(jCorSecundaria.getBackground());

        // Abra o diálogo de seleção de cores
        Color selectedColor = colorChooser.showDialog(this, "Selecione uma cor", jCorSecundaria.getBackground());

        // Verifique se o usuário selecionou uma cor
        if (selectedColor != null) {
            // Defina a cor de fundo do jCorPrincipal com a cor selecionada
            jCorSecundaria.setBackground(selectedColor);
        }
    }//GEN-LAST:event_jCorSecundariaMouseClicked

    private void jFrameDesenhoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jFrameDesenhoMouseClicked
        if (opcaoSelecionada == 0) {
            jFrameDesenho.setBackground(jCorPrincipal.getBackground());
        }
        if (opcaoSelecionada == 1) {
            ponto.corPrimaria = jCorPrincipal.getBackground();
            ponto.x = evt.getX();
            ponto.y = evt.getY();
            ponto.desenhar(jFrameDesenho.getGraphics());
        }
        if (opcaoSelecionada == 8) {
            ponto.corPrimaria = jCorPrincipal.getBackground();
            ponto.corInterna = jCorSecundaria.getBackground();
            ponto.x = evt.getX();
            ponto.y = evt.getY();
            ponto.setTamanhoPonto(3); // Defina o tamanho do ponto temporário

            if (!evt.isMetaDown()) {
                // Adiciona um ponto ao polígono apenas quando o botão esquerdo do mouse for pressionado
                poligono.setCorPrimaria(jCorPrincipal.getBackground());
                poligono.setCorInterna(jCorSecundaria.getBackground());
                poligono.adicionarPonto(evt.getX(), evt.getY());
                // Desenhe o ponto temporário
                ponto.desenhar(jFrameDesenho.getGraphics());
            }

            // Verifica se o botão direito do mouse foi pressionado para finalizar o polígono
            if (evt.isMetaDown()) {
                if (lastClickX != -1 && lastClickY != -1) {
                    // Adicione o último clique à lista de pontos
                    poligono.adicionarPonto(lastClickX, lastClickY);

                    // Desenhe o polígono com o último clique
                    poligono.desenhar(jFrameDesenho.getGraphics());

                    // Limpe o ponto temporário
                    lastClickX = -1;
                    lastClickY = -1;
                    poligono.limparPontos();
                }
            } else {
                // Armazene o ponto temporário
                lastClickX = evt.getX();
                lastClickY = evt.getY();
            }
        }


    }//GEN-LAST:event_jFrameDesenhoMouseClicked

    private void jFrameDesenhoMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jFrameDesenhoMousePressed
        if (opcaoSelecionada == 2) {
            reta.corPrimaria = jCorPrincipal.getBackground();
            reta.x = evt.getX();
            reta.y = evt.getY();

        }
        if (opcaoSelecionada == 3) {
            circulo.corPrimaria = jCorPrincipal.getBackground();
            circulo.corInterna = jCorSecundaria.getBackground();
            circulo.x = evt.getX();
            circulo.y = evt.getY();
        }
        if (opcaoSelecionada == 4) {
            retangulo.x = evt.getX();
            retangulo.y = evt.getY();
        }
        if (opcaoSelecionada == 5) {
            borracha.x = evt.getX();
            borracha.y = evt.getY();
        }
        if (opcaoSelecionada == 7) {
            cilindro.x = evt.getX();
            cilindro.y = evt.getY();
        }

        if (opcaoSelecionada == 9) {
            piramide.x = evt.getX();
            piramide.y = evt.getY();
        }
    }//GEN-LAST:event_jFrameDesenhoMousePressed

    private void btnRetaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnRetaMouseClicked
        opcaoSelecionada = 2;
        setTitle("RETA SELECIONADO");
    }//GEN-LAST:event_btnRetaMouseClicked
    
    private void desenharBorracha(int x, int y, Color backgroundColor, Borracha borracha) {
        borracha.x = x;
        borracha.y = y;
        borracha.corPrimaria = backgroundColor;
        borracha.desenhar(jFrameDesenho.getGraphics());
    }

    private void desenharSpray(int x, int y, Color corPrimaria, int raio, Ponto ponto, Graphics g) {
        ponto.corPrimaria = corPrimaria;
        Random gerador = new Random();
        int numPontos = 50;

        for (int i = 0; i < numPontos; i++) {
            int numX = gerador.nextInt(2 * raio + 1) - raio;
            int numY = gerador.nextInt(2 * raio + 1) - raio;
            int offsetX = x - 8;
            int offsetY = y - 8;

            ponto.x = offsetX + numX;
            ponto.y = offsetY + numY;

            double distancia = Math.pow(x - ponto.x, 2) + Math.pow(y - ponto.y, 2);

            if (distancia < raio * raio) {
                ponto.desenhar(g);
            }
        }
    }

    private void jFrameDesenhoMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jFrameDesenhoMouseDragged
        if (opcaoSelecionada == 5) {
            desenharBorracha(evt.getX(), evt.getY(), jFrameDesenho.getBackground(), borracha);
        }

        if (opcaoSelecionada == 6) {
            desenharSpray(evt.getX(), evt.getY(), jCorPrincipal.getBackground(), raio, ponto, jFrameDesenho.getGraphics());
        }


    }//GEN-LAST:event_jFrameDesenhoMouseDragged

    private void desenharObjeto(int opcaoSelecionada, Graphics g, int x, int y, Color corPrimaria, Color corSecundaria, boolean mostrarArea) {
        if (opcaoSelecionada == 2) {
            reta.showArea = mostrarArea;
            reta.x1 = x;
            reta.y1 = y;
            reta.desenhar(g);
        } else if (opcaoSelecionada == 3) {
            circulo.showArea = mostrarArea;
            circulo.raio = Math.abs(x - circulo.x);
            circulo.diametro = Math.abs(y - circulo.y);
            circulo.desenhar(g);
        } else if (opcaoSelecionada == 4) {
            retangulo.showArea = mostrarArea;
            retangulo.base = Math.abs(x - retangulo.x);
            retangulo.largura = Math.abs(y - retangulo.y);
            retangulo.corInterna = corSecundaria;
            retangulo.corPrimaria = corPrimaria;
            retangulo.desenhar(g);
        } else if (opcaoSelecionada == 7) {
            cilindro.showArea = mostrarArea;
            cilindro.x1 = x;
            cilindro.y1 = y;
            cilindro.corPrimaria = corPrimaria;
            cilindro.corInterna = corSecundaria;
            cilindro.desenhar(g);
        } else if (opcaoSelecionada == 9) {
            piramide.x1 = x;
            piramide.y1 = y;
            piramide.largura = x - piramide.x;
            piramide.altura = y - piramide.y;
            piramide.desenhar(g);
        }
        // Adicione mais condições if para outras opções, se necessário
    }

    private void jFrameDesenhoMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jFrameDesenhoMouseReleased
        desenharObjeto(opcaoSelecionada, jFrameDesenho.getGraphics(), evt.getX(), evt.getY(), jCorPrincipal.getBackground(), jCorSecundaria.getBackground(), cbTexto.getState());
    }//GEN-LAST:event_jFrameDesenhoMouseReleased

    private void btnCirculoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCirculoMouseClicked
        opcaoSelecionada = 3;
        setTitle("CIRCULO SELECIONADO");
    }//GEN-LAST:event_btnCirculoMouseClicked

    private void btnRetanguloMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnRetanguloMouseClicked
        opcaoSelecionada = 4;
        setTitle("RETANGULO SELECIONADO");
    }//GEN-LAST:event_btnRetanguloMouseClicked

    private void btnBorrachaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnBorrachaMouseClicked
        opcaoSelecionada = 5;
        setTitle("BORRACHA SELECIONADA");
    }//GEN-LAST:event_btnBorrachaMouseClicked

    private void btnSprayMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSprayMouseClicked
        opcaoSelecionada = 6;
        setTitle("SPRAY SELECIONADO");
    }//GEN-LAST:event_btnSprayMouseClicked

    private void btnCilindroMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCilindroMouseClicked
        opcaoSelecionada = 7;
        setTitle("CILINDRO SELECIONADO");
    }//GEN-LAST:event_btnCilindroMouseClicked

    private void btnPoligonoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnPoligonoMouseClicked
        opcaoSelecionada = 8;
        setTitle("POLIGONO SELECIONADO");
    }//GEN-LAST:event_btnPoligonoMouseClicked

    private void btnTrianguloMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnTrianguloMouseClicked
        opcaoSelecionada = 9;
        setTitle("TRIANGULO SELECIONADO");
    }//GEN-LAST:event_btnTrianguloMouseClicked

    private void btnBaldeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBaldeActionPerformed
        opcaoSelecionada = 0;
        setTitle("BALDE SELECIONADO");
    }//GEN-LAST:event_btnBaldeActionPerformed

    private void atualizarTamanho(int rolagem, int tamanhoMaximo, int tamanhoMinimo, int valorPadrao, Object objeto, String tipo) {
        if (rolagem > 0) {
            tamanho--;
        } else {
            tamanho++;
        }

        if (tamanho < tamanhoMinimo) {
            tamanho = tamanhoMinimo;
        } else if (tamanho > tamanhoMaximo) {
            tamanho = tamanhoMaximo;
        }

        if (tipo.equals("Ponto")) {
            ((Ponto) objeto).setTamanhoPonto(tamanho);
            setTitle("PONTO SELECIONADO, TAMANHO DO PONTO: " + tamanho);
        }

        if (tipo.equals("Reta")) {
            ((Reta) objeto).setTamanhoPonto(tamanho);
            setTitle("RETA SELECIONADO, TAMANHO DA RETA: " + tamanho);
        }

        if (tipo.equals("Circulo")) {
            ((Circulo) objeto).setTamanhoPonto(tamanho);
            setTitle("CÍRCULO SELECIONADO, TAMANHO DO CÍRCULO: " + tamanho);
        }

        if (tipo.equals("Retangulo")) {
            ((Retangulo) objeto).setTamanhoPonto(tamanho);
            setTitle("RETÂNGULO SELECIONADO, TAMANHO DA RETA: " + tamanho);
        }

        if (tipo.equals("Borracha")) {
            ((Borracha) objeto).setTamanhoBorracha(tamanho);
            setTitle("BORRACHA SELECIONADA, TAMANHO DA BORRACHA: " + tamanho);
        }

        if (tipo.equals("Spray")) {
            this.raio = tamanho;
            setTitle("SPRAY SELECIONADO, TAMANHO DO SPRAY: " + tamanho);
        }

        if (tipo.equals("Cilindro")) {
            ((Cilindro) objeto).setEspessuraLinha(tamanho);
            setTitle("CILINDRO SELECIONADO, TAMANHO DO CILINDRO: " + tamanho);
        }

        if (tipo.equals("Poligono")) {
            ((Poligono) objeto).setEspessuraLinha(tamanho);
            setTitle("POLIGONO SELECIONADO, TAMANHO DO POLIGONO: " + tamanho);
        }
    }

    private void jFrameDesenhoMouseWheelMoved(java.awt.event.MouseWheelEvent evt) {//GEN-FIRST:event_jFrameDesenhoMouseWheelMoved
        if (opcaoSelecionada == 1) {
            atualizarTamanho(evt.getWheelRotation(), 5, 1, 3, ponto, "Ponto");
        } else if (opcaoSelecionada == 2) {
            atualizarTamanho(evt.getWheelRotation(), 5, 1, 3, reta, "Reta");
        } else if (opcaoSelecionada == 3) {
            atualizarTamanho(evt.getWheelRotation(), 5, 1, 3, circulo, "Circulo");
        } else if (opcaoSelecionada == 4) {
            atualizarTamanho(evt.getWheelRotation(), 5, 1, 3, retangulo, "Retangulo");
        } else if (opcaoSelecionada == 5) {
            atualizarTamanho(evt.getWheelRotation(), 50, 5, 10, borracha, "Borracha");
        } else if (opcaoSelecionada == 6) {
            atualizarTamanho(evt.getWheelRotation(), 50, 5, 5, this, "Spray");
        } else if (opcaoSelecionada == 7) {
            atualizarTamanho(evt.getWheelRotation(), 5, 1, 1, cilindro, "Cilindro");
        } else if (opcaoSelecionada == 8) {
            atualizarTamanho(evt.getWheelRotation(), 5, 1, 1, poligono, "Poligono");
        }
        /*
        if (opcaoSelecionada == 1) {
            int rolagem = evt.getWheelRotation();
            if (rolagem > 0) {
                ponto.tamanhoPonto--;

            } else {
                ponto.tamanhoPonto++;
            }
            if (ponto.tamanhoPonto < 1) {
                ponto.tamanhoPonto = 1;
            } else if (ponto.tamanhoPonto > 5) {
                ponto.tamanhoPonto = 5;
            }
            setTitle("PONTO SELECIONADO, TAMANHO DO PONTO: " + ponto.tamanhoPonto);
        }

        if (opcaoSelecionada == 2) {
            int rolagem = evt.getWheelRotation();
            if (rolagem > 0) {
                reta.tamanhoPonto--;

            } else {
                reta.tamanhoPonto++;
            }
            if (reta.tamanhoPonto < 1) {
                reta.tamanhoPonto = 1;
            } else if (reta.tamanhoPonto > 5) {
                reta.tamanhoPonto = 5;
            }
            setTitle("RETA SELECIONADO, TAMANHO DA RETA: " + reta.tamanhoPonto);
        }

        if (opcaoSelecionada == 3) {
            int rolagem = evt.getWheelRotation();
            if (rolagem > 0) {
                circulo.tamanhoPonto--;

            } else {
                circulo.tamanhoPonto++;
            }
            if (circulo.tamanhoPonto < 1) {
                circulo.tamanhoPonto = 1;
            } else if (circulo.tamanhoPonto > 5) {
                circulo.tamanhoPonto = 5;
            }
            setTitle("CÍRCULO SELECIONADO, TAMANHO DO CÍRCULO: " + circulo.tamanhoPonto);
        }

        if (opcaoSelecionada == 4) {
            int rolagem = evt.getWheelRotation();
            if (rolagem > 0) {
                retangulo.tamanhoPonto--;

            } else {
                retangulo.tamanhoPonto++;
            }
            if (retangulo.tamanhoPonto < 1) {
                retangulo.tamanhoPonto = 1;
            } else if (retangulo.tamanhoPonto > 5) {
                retangulo.tamanhoPonto = 5;
            }
            setTitle("RETÂNGULO SELECIONADO, TAMANHO DA RETA: " + retangulo.tamanhoPonto);
        }

        if (opcaoSelecionada == 5) {
            int rolagem = evt.getWheelRotation();
            if (rolagem > 0) {
                borracha.tamanhoBorracha--;

            } else {
                borracha.tamanhoBorracha++;
            }
            if (borracha.tamanhoBorracha < 5) {
                borracha.tamanhoBorracha = 5;
            } else if (borracha.tamanhoBorracha > 50) {
                borracha.tamanhoBorracha = 50;
            }
            setTitle("BORRACHA SELECIONADA, TAMANHO DA BORRACHA: " + borracha.tamanhoBorracha);
        }
        if (opcaoSelecionada == 6) {
            int rolagem = evt.getWheelRotation();
            if (rolagem > 0) {
                this.raio--;

            } else {
                this.raio++;
            }
            if (this.raio < 5) {
                this.raio = 5;
            } else if (this.raio > 50) {
                this.raio = 50;
            }
            setTitle("SPRAY SELECIONADO, TAMANHO DO SPRAY: " + this.raio);
        }
        if (opcaoSelecionada == 7) {
            int rolagem = evt.getWheelRotation();
            if (rolagem > 0) {
                cilindro.espessuraLinha--;

            } else {
                cilindro.espessuraLinha++;
            }
            if (cilindro.espessuraLinha < 1) {
                cilindro.espessuraLinha = 1;
            } else if (cilindro.espessuraLinha > 5) {
                cilindro.espessuraLinha = 5;
            }
            setTitle("CILINDRO SELECIONADO, TAMANHO DO CILINDRO: " + cilindro.espessuraLinha);
        }
        if (opcaoSelecionada == 8) {
            int rolagem = evt.getWheelRotation();
            if (rolagem > 0) {
                poligono.espessuraLinha--;

            } else {
                poligono.espessuraLinha++;
            }
            if (poligono.espessuraLinha < 1) {
                poligono.espessuraLinha = 1;
            } else if (poligono.espessuraLinha > 5) {
                poligono.espessuraLinha = 5;
            }
            setTitle("POLIGONO SELECIONADO, TAMANHO DO POLIGONO: " + poligono.espessuraLinha);
        }
        */

    }//GEN-LAST:event_jFrameDesenhoMouseWheelMoved

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBalde;
    private javax.swing.JButton btnBorracha;
    private javax.swing.JButton btnCilindro;
    private javax.swing.JButton btnCirculo;
    private javax.swing.JButton btnPoligono;
    private javax.swing.JButton btnPonto;
    private javax.swing.JButton btnReta;
    private javax.swing.JButton btnRetangulo;
    private javax.swing.JButton btnSpray;
    private javax.swing.JButton btnTriangulo;
    private java.awt.Checkbox cbTexto;
    private javax.swing.JPanel jCorPrincipal;
    private javax.swing.JPanel jCorSecundaria;
    private javax.swing.JPanel jFrameDesenho;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    // End of variables declaration//GEN-END:variables
}
